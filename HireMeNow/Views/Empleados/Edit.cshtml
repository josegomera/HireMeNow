@model HireMeNow.ViewModel.EmpleadosViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Dashboard.cshtml";
}

<style>
    h2 {
        text-align: center;
    }
</style>

<hr />
<h2>Editar Empleado</h2>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Empleados.Id)

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Empleados.Cedula, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Empleados.Cedula, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Empleados.Cedula, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Empleados.Nombres, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Empleados.Nombres, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Empleados.Nombres, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Empleados.Apellidos, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Empleados.Apellidos, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Empleados.Apellidos, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Empleados.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Empleados.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Empleados.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Empleados.PuestosId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Empleados.PuestosId, new SelectList(Model.Puestos, "Id", "Nombre"), "Puestos", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Empleados.PuestosId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Empleados.FechaIngreso, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Empleados.FechaIngreso, new { htmlAttributes = new { @class = "form-control", @disabled = "Disabled" } })
                        @Html.ValidationMessageFor(model => model.Empleados.FechaIngreso, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Empleados.SalarioMensual, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Empleados.SalarioMensual, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Empleados.SalarioMensual, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Empleados.EstadoId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Empleados.EstadoId, new SelectList(Model.Estados, "Id", "Estados"), "Estados", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Empleados.EstadoId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.Empleados.Creado, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Empleados.Creado, new { htmlAttributes = new { @class = "form-control", @disabled = "Disabled" } })
                        @Html.ValidationMessageFor(model => model.Empleados.Creado, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-6">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-outline-success">Editar</button>
                    @Html.ActionLink("Back to List", "Index", "", htmlAttributes: new { @class = "btn btn-outline-info" })
                </div>
            </div>
        </div>
    </div>
}


